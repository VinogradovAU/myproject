1. Написать регулярное выражение, которое проверяет валидный IP-адрес. Например, 192.168.1.1 подойдет,
а 256.300.1.1 — нет.

# создал файл и записал в него несколько значений ip
ezh@ezh-VirtualBox:~$ cat test_ip
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2

# Поиск подстроки: 3 сегмента с числом от 000....999 в конце точка, повторение 3 раза, и еще сегмент от 000...999
ezh@ezh-VirtualBox:~$ cat test_ip | grep -E "([0-9]{1,3}[\.]){3}[0-9]{1,3}"
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2

ezh@ezh-VirtualBox:~$ sed -En 's/(([0-9]{1,3}[\.]){3}[0-9]{1,3})/\1/p' test_ip
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2
# выводит все содержимое. Не понятно!

ezh@ezh-VirtualBox:~$ cat test_ip
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2

ezh@ezh-VirtualBox:~$ cat test_ip | grep -E '^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])$'
89.122.11.100

# (каждый октек 250 - 255 или(|) 200 - 240 или(|) 100-199 или (|) 1 - 99 далее точка (.) ) все повторить 3 раза,
далее такой же октек без точки.
# нашел строчку с правильным IP - 89.122.11.100

ezh@ezh-VirtualBox:~$ cat test_ip
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2

ezh@ezh-VirtualBox:~$ sed -En 's/^.*(([0-9]{1,3}[\.]){3}[0-9]{1,3}).*$/\1/p' test_ip
2.168.0.1
9.178.19.193
9.122.11.100
0.168.0.1
2.168.500.2
# sed не показывает начало

# Добавил IP адреса в файл
ezh@ezh-VirtualBox:~$ cat test_ip
asd192.168.0.1asd
89.178.19.1930
89.122.11.100
300.168.0.1
192.168.500.2
256.300.1.1
192.168.1.1

ezh@ezh-VirtualBox:~$ cat test_ip | grep -E '^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).*$'
89.178.19.1930
89.122.11.100
192.168.1.1

# УРААААААА!!!!!!!! Вот так вырезал то что хотел!
ezh@ezh-VirtualBox:~$ sed -En 's/^(((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])).*$/\1/p' test_ip
89.178.19.193
89.122.11.100
192.168.1.1

2. Написать регулярное выражение, которое проверяет, является ли указанный файлом нужного типа (на выбор .com,.exe или
 .jpg,.png,.gif и т.д.). Написать регулярное выражение для проверки, ведет ли ссылка URL на некоторый файл, и это
 действительно ссылка на картинку (например, http://site.com/folder/1.png), а не на любой файл.

ezh@ezh-VirtualBox:~$ cat test1
http://site1.com/folder/123.png
http://site2.com/folder/test12.com
http://site33.com/folder/123test.exe
http://site.com/folder/test.png
http://site.com/folder/andry.xls
http://site.com/folder/1test.jpg
http://site5.com/folder/test5.gif
http://site.com/folder100/12345.gif
http://site.com/folderA1/1234gif.gif
http://site.com/folder0/asd.exe
http://site.com/folder11/asd33.png
http://site.com/folder22/ffff16.com

ezh@ezh-VirtualBox:~$ sed -En 's/(^.*.png)/\1/p' test1
http://site1.com/folder/123.png
http://site.com/folder/test.png
http://site.com/folder11/asd33.png

ezh@ezh-VirtualBox:~$ sed -En 's/(^.*.gif)/\1/p' test1
http://site5.com/folder/test5.gif
http://site.com/folder100/12345.gif
http://site.com/folderA1/1234gif.gif

ezh@ezh-VirtualBox:~$ sed -En 's/^.*(\/.*\.png)/\1/p' test1
/123.png
/test.png
/asd33.png
ezh@ezh-VirtualBox:~$ sed -En 's/^.*(\/.*\.gif)/\1/p' test1
/test5.gif
/12345.gif
/1234gif.gif

ezh@ezh-VirtualBox:~$ sed -En 's/^.*\/(.*\.gif)/\1/p' test1
test5.gif
12345.gif
1234gif.gif

ezh@ezh-VirtualBox:~$ sed -En 's/(^http:.*(\/.*)(\/.*)\/.*\.gif)/\1/p' test1
http://site5.com/folder/test5.gif
http://site.com/folder100/12345.gif
http://site.com/folderA1/1234gif.gif

ezh@ezh-VirtualBox:~$ sed -En 's/(^http:.*(\/.*)(\/.*)\/.*\.png)/\1/p' test1
http://site1.com/folder/123.png
http://site.com/folder/test.png
http://site.com/folder11/asd33.png

ezh@ezh-VirtualBox:~$ sed -En 's/(^http:(\/)(\/)*(\/.*)(\/.*)\/.*\.png)/\1/p' test1
http://site1.com/folder/123.png
http://site.com/folder/test.png
http://site.com/folder11/asd33.png

4. *Написать регулярное выражение, которое проверяет, что файл в URL (например,
https://site.ru/folder/download/test.docx) не обладает неким расширением (например .exe не пройдет,
или .sh — не пройдет. Выбор списка исключенных расширений за вами).

ezh@ezh-VirtualBox:~$ cat test1
http://site1.com/folder/123.png
http://site2.com/folder/test12.com
http://site33.com/folder/123test.exe
http://site.com/folder/test.png
http://site.com/folder/andry.xls
http://site.com/folder/1test.jpg
http://site5.com/folder/test5.gif
http://site.com/folder100/12345.gif
http://site.com/folderA1/1234gif.gif
http://site.com/folder0/asd.exe
http://site.com/folder11/asd33.png
http://site.com/folder22/ffff16.com


#вывести все, кроме ссылок на файл png
ezh@ezh-VirtualBox:~$ sed -En 's/(^http:(\/)(\/)*(\/.*)(\/.*)\/.*\.[^png])/\1/p' test1
http://site2.com/folder/test12.com
http://site33.com/folder/123test.exe
http://site.com/folder/andry.xls
http://site.com/folder/1test.jpg
http://site.com/folder0/asd.exe
http://site.com/folder22/ffff16.com

#вывести все, кроме ссылок на файл gif, png, xls
ezh@ezh-VirtualBox:~$ sed -En 's/(^http:(\/)(\/)*(\/.*)(\/.*)\/.*\.([^gif^png^xls]))/\1/p' test1
http://site2.com/folder/test12.com
http://site33.com/folder/123test.exe
http://site.com/folder/1test.jpg
http://site.com/folder0/asd.exe
http://site.com/folder22/ffff16.com

5. Задание от немцев.
У вас есть лог log.txt, который содержит запросы на загрузку файлов. Один запрос на одной строке. IP адрес во втором
столбце. Имя файла может быть в любом столбце. Столбцы разделены одним или несколькими пробелами. Нужно написать
ыражение в одну строку, которое выведет список всех IP адресов за исключением loopback интерфейсов, с которых
запрашивался файл /closeio.html, а также количество таких запросов для каждого адреса. Результат должен быть
отсортирован по этому значению. Можно использовать стандартные тулы, которые запустятся на большинстве UNIX системах.

ezh@ezh-VirtualBox:~$ sed -En 's/^.* (((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])).*$/\1/p' task5
189.125.132.232
191.43.29.55
32.136.34.207
91.40.41.91
105.204.145.202
236.185.24.68
127.0.0.1
127.0.0.1
121.26.153.90
179.212.146.225
236.185.24.68
21.11.134.84
121.26.153.90
179.212.146.225
214.72.226.119
220.56.165.59
250.127.117.33
236.185.24.68
127.0.0.1
21.11.134.84
121.26.153.90
179.212.146.225
53.21.230.126
253.21.230.126
127.0.0.1
253.21.230.126
253.21.230.126
202.120.204.224
98.57.42.56
50.111.244.24
172.13.183.9
247.132.62.22
174.7.58.16
187.123.93.82
127.0.0.1
163.148.78.78
159.158.148.85


ezh@ezh-VirtualBox:~$ sed -En 's/(.*closeio.html.*)/\1/p' task5
/closeio.html 32.136.34.207   404 555
user1    236.185.24.68 /closeio.html
/closeio.html 127.0.0.1     Chrome/79.0.3945.117
/closeio.html 121.26.153.90
/closeio.html 236.185.24.68
/closeio.html 121.26.153.90     Chrome/79.0.3945.117
/closeio.html 250.127.117.33
ergergresr  236.185.24.68 jjnieer ergwegewg w4gw4 gw4g /closeio.html
AppleWebKit/537.36 121.26.153.90 /closeio.html
/closeio.html 127.0.0.1
/closeio.html ::1
ivan_haski   127.0.0.1             /closeio.html
/closeio.html 163.148.78.78

ezh@ezh-VirtualBox:~$ sed -En '/closeio.html/s/^.* (((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])).*$/\1/p' task5 | sort | uniq -c | sort -r
      3 236.185.24.68
      3 127.0.0.1
      3 121.26.153.90
      1 32.136.34.207
      1 250.127.117.33
      1 163.148.78.78

ezh@ezh-VirtualBox:~$ sed -En '/closeio.html/s/^.* (((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])).*$/\1/p' task5 | sort | uniq -c | sort -r | sed '/127.0.0.1/d'
      3 236.185.24.68
      3 121.26.153.90
      1 32.136.34.207
      1 250.127.117.33
      1 163.148.78.78


